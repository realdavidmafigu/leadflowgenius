import React from 'react';
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
  Font
} from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: { padding: 32, fontSize: 12, fontFamily: 'Helvetica' },
  header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 24 },
  logo: { height: 48, width: 48, objectFit: 'contain' },
  businessInfo: { flex: 1, marginLeft: 16 },
  section: { marginBottom: 16 },
  table: { width: '100%', borderWidth: 1, borderColor: '#eee', marginBottom: 16 },
  tableRow: { flexDirection: 'row', borderBottomWidth: 1, borderColor: '#eee' },
  tableCell: { flex: 1, padding: 6 },
  tableHeader: { fontWeight: 'bold', backgroundColor: '#f3f4f6' },
  total: { textAlign: 'right', fontWeight: 'bold', fontSize: 14, marginTop: 8 },
  thankYou: { marginTop: 32, fontSize: 13, textAlign: 'center', color: '#2563eb' },
  footer: { marginTop: 32, fontSize: 10, textAlign: 'center', color: '#888' },
});

export default function InvoiceReceiptPDF({ invoice, client, businessProfile }: any) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* Header */}
        <View style={styles.header}>
          {businessProfile?.logoUrl && (
            <Image src={businessProfile.logoUrl} style={styles.logo} />
          )}
          <View style={styles.businessInfo}>
            <Text style={{ fontSize: 18, fontWeight: 'bold' }}>{businessProfile?.name || 'Business Name'}</Text>
            <Text>{businessProfile?.address}</Text>
            <Text>{businessProfile?.phone}</Text>
            <Text>{businessProfile?.email}</Text>
            {businessProfile?.website && <Text>{businessProfile.website}</Text>}
          </View>
        </View>
        {/* Client Info */}
        <View style={styles.section}>
          <Text style={{ fontWeight: 'bold', marginBottom: 2 }}>Receipt To:</Text>
          <Text>{client.name}</Text>
          <Text>{client.email}</Text>
          <Text>{client.phone}</Text>
          {client.company && <Text>{client.company}</Text>}
        </View>
        {/* Invoice Info */}
        <View style={styles.section}>
          <Text>Invoice #: {invoice.id}</Text>
          <Text>Date Paid: {invoice.updatedAt ? new Date(invoice.updatedAt).toLocaleDateString() : new Date().toLocaleDateString()}</Text>
        </View>
        {/* Items Table */}
        <View style={styles.table}>
          <View style={[styles.tableRow, styles.tableHeader]}>
            <Text style={styles.tableCell}>Item</Text>
            <Text style={styles.tableCell}>Qty</Text>
            <Text style={styles.tableCell}>Unit Price</Text>
            <Text style={styles.tableCell}>Tax %</Text>
            <Text style={styles.tableCell}>Total</Text>
          </View>
          {invoice.items.map((item: any, idx: number) => (
            <View style={styles.tableRow} key={idx}>
              <Text style={styles.tableCell}>{item.name}</Text>
              <Text style={styles.tableCell}>{item.quantity}</Text>
              <Text style={styles.tableCell}>${item.price.toFixed(2)}</Text>
              <Text style={styles.tableCell}>{item.tax || 0}</Text>
              <Text style={styles.tableCell}>${(item.quantity * item.price * (1 + (item.tax || 0) / 100)).toFixed(2)}</Text>
            </View>
          ))}
        </View>
        <Text style={styles.total}>Total Paid: ${invoice.totalAmount.toFixed(2)}</Text>
        <Text style={{ marginTop: 8 }}>Payment Method: Manual</Text>
        {invoice.paymentReference && <Text>Reference: {invoice.paymentReference}</Text>}
        {/* Thank you note */}
        <Text style={styles.thankYou}>Thank you for your business!</Text>
        {/* Footer */}
        <Text style={styles.footer}>This receipt was generated by Leadflowgenius CRM</Text>
      </Page>
    </Document>
  );
} 